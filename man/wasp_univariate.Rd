% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/divideConquer.R
\name{wasp_univariate}
\alias{wasp_univariate}
\title{Get Univariate Wasserstein Posterior}
\usage{
wasp_univariate(
  sampList,
  numAtoms = 100,
  solver = "lpsolve",
  n_samps = length(sampList[[1]])
)
}
\arguments{
\item{sampList}{List of samples from univariate posterior. Each sample must be a numeric vector.}

\item{numAtoms}{Number of atoms desired for calculating WASP}

\item{solver}{Linear-program solver to use. Solvers available are provided by the R package ROI (see ?ROI for details).}

\item{n_samps}{Number of samples to return from WASP. Defaults as length of first sub-sample provided in sampList.}
}
\value{
n_samps samples from WASP
}
\description{
Takes list of samples from univariate sub-sample posteriors and returns samples from the Wasserstein Posterior. Utilizes Algorithm 1 fromSrivastava et al. (2018), assuming theta_ij is univariate and f is the identity function.
}
